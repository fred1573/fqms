<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd

		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd"
       default-lazy-init="true">

    <description>Spring公共配置</description>
    <import resource="applicationContext-ds.xml"/>
    <context:spring-configured/>
    <!-- 使用annotation 自动注册bean,并保证@Required,@Autowired的属性被注入 -->
    <context:component-scan base-package="com.project">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Component"/>
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Repository"/>

        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:exclude-filter type="annotation"
                                expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan>

    <!-- 加载资源文件 -->
    <context:property-placeholder location="classpath:config.properties"/>
    <!--  异常统一处理  -->
    <bean id="exceptionHand" class="com.project.exception.ExceptionHandler"></bean>
    <!-- 默认数据源的Hibernate-sessionFactory配置 -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="namingStrategy">
            <bean class="org.hibernate.cfg.ImprovedNamingStrategy"/>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQL82Dialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">false</prop>
                <prop key="hibernate.cache.use_query_cache">true</prop>
                <prop key="hibernate.cache.use_second_level_cache">true</prop>
                <prop key="hibernate.cache.region.factory_class">
                    org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory
                </prop>
                <prop key="net.sf.ehcache.configurationResourceName">cache/ehcache.xml</prop>
            </props>
        </property>
        <property name="packagesToScan">
            <list>
                <value>com.project.entity</value>
                <value>com.project.bean.vo</value>
            </list>
        </property>
    </bean>

    <!-- 事务管理器配置 -->
    <bean id="hibernateTransactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="mybatisSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mapperLocations" value="classpath:com/project/dao/mapper/*.xml"/>
        <property name="plugins">
            <bean class="com.github.miemiedev.mybatis.paginator.OffsetLimitInterceptor">
                <property name="dialectClass" value="com.github.miemiedev.mybatis.paginator.dialect.PostgreSQLDialect"/>
            </bean>
        </property>
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer" id="mapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="mybatisSessionFactory"/>
        <property name="basePackage" value="com.project.dao"/>
    </bean>


    <bean name="mybatisTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 另一个事务管理器, Jdbc单数据源事务 -->
    <bean id="quartzTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="quartzDataSource"/>
    </bean>

    <!-- 使用annotation定义事务 -->
    <tx:annotation-driven transaction-manager="hibernateTransactionManager" proxy-target-class="true"/>

    <!-- 定义aspectj -->
    <aop:aspectj-autoproxy proxy-target-class="true"/>


    <!-- hibernate validator -->
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="validationMessageSource" ref="messageSource"/>
    </bean>

    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basename" value="messageSource"/>
        <property name="cacheSeconds" value="120"/>
    </bean>



    <!-- 设置applicationContext上下文 -->
    <bean id="SpringContextHolder" class="com.project.core.utils.spring.SpringContextHolder" scope="singleton"
          lazy-init="false"/>

    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>

    <bean id="syncChannel" class="com.project.bean.proxysale.SyncChannel">
        <property name="poolTaskExecutor" ref="poolTaskExecutor"/>
    </bean>

    <bean id="poolTaskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <property name="corePoolSize" value="1"/>
        <property name="keepAliveSeconds" value="10"/>
        <property name="maxPoolSize" value="5"/>
    </bean>

    <bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <!-- 线程池维护线程的最少数量 -->
        <property name="corePoolSize" value="5"/>
        <!-- 线程池维护线程所允许的空闲时间 -->
        <property name="keepAliveSeconds" value="30000"/>
        <!-- 线程池维护线程的最大数量 -->
        <property name="maxPoolSize" value="10000"/>
        <!-- 线程池所使用的缓冲队列 -->
        <property name="queueCapacity" value="200"/>
    </bean>

    <bean id="financeHelper" class="com.project.utils.FinanceHelper"/>

    <bean id="applicationEventMulticaster" class="org.springframework.context.event.SimpleApplicationEventMulticaster">
        <property name="taskExecutor">
            <bean class="org.springframework.core.task.SimpleAsyncTaskExecutor"/>
        </property>
    </bean>

    <!--<bean id="stringRedisSerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer"/>-->

    <!--<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">-->
        <!--<property name="maxIdle" value="5"/>-->
        <!--<property name="maxTotal" value="10"/>-->
        <!--<property name="minIdle" value="2"/>-->
        <!--<property name="testOnBorrow" value="true"/>-->
        <!--<property name="testWhileIdle" value="true"/>-->
    <!--</bean>-->
    <!--<bean id="stringRedisTemplateToms" class="org.springframework.data.redis.core.RedisTemplate">-->
        <!--<property name="keySerializer" ref="stringRedisSerializer"/>-->
        <!--<property name="valueSerializer" ref="stringRedisSerializer"/>-->
        <!--<property name="connectionFactory" ref="jedisConnectionFactoryToms"/>-->
    <!--</bean>-->

    <!--<bean id="stringRedisTemplate" class="org.springframework.data.redis.core.RedisTemplate">-->
        <!--<property name="keySerializer" ref="stringRedisSerializer"/>-->
        <!--<property name="valueSerializer" ref="stringRedisSerializer"/>-->
        <!--<property name="connectionFactory" ref="jedisConnectionFactory"/>-->
    <!--</bean>-->

    <!--<beans profile="test">-->
        <!--<bean  id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">-->
            <!--<property name="hostName" value="192.168.1.27"/>-->
            <!--<property name="port" value="6379"/>-->
            <!--<property name="database" value="2"/>-->
            <!--<property name="password" value="111111"/>-->
            <!--<property name="usePool" value="true"/>-->
            <!--<property name="poolConfig" ref="jedisPoolConfig"/>-->
        <!--</bean>-->
        <!--<bean  id="jedisConnectionFactoryToms" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">-->
            <!--<property name="hostName" value="192.168.1.27"/>-->
            <!--<property name="port" value="6379"/>-->
            <!--<property name="database" value="0"/>-->
            <!--<property name="password" value="111111"/>-->
            <!--<property name="usePool" value="true"/>-->
            <!--<property name="poolConfig" ref="jedisPoolConfig"/>-->
        <!--</bean>-->
    <!--</beans>-->
    <!--<beans profile="dev">-->
        <!--<bean  id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">-->
            <!--<property name="hostName" value="192.168.1.27"/>-->
            <!--<property name="port" value="6379"/>-->
            <!--<property name="database" value="2"/>-->
            <!--<property name="password" value="111111"/>-->
            <!--<property name="usePool" value="true"/>-->
            <!--<property name="poolConfig" ref="jedisPoolConfig"/>-->
        <!--</bean>-->
        <!--<bean  id="jedisConnectionFactoryToms" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">-->
            <!--<property name="hostName" value="192.168.1.27"/>-->
            <!--<property name="port" value="6379"/>-->
            <!--<property name="database" value="0"/>-->
            <!--<property name="password" value="111111"/>-->
            <!--<property name="usePool" value="true"/>-->
            <!--<property name="poolConfig" ref="jedisPoolConfig"/>-->
        <!--</bean>-->
    <!--</beans>-->
    <!--<beans profile="production">-->
        <!--<bean  id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">-->
            <!--<property name="hostName" value="10.144.10.151"/>-->
            <!--<property name="port" value="6379"/>-->
            <!--<property name="database" value="2"/>-->
            <!--<property name="password" value="mfgkftoajpvH3lds8ykgcnzeWcaAuwhlo0lqzqsappsfacjfenwqiJtadydqwfjrN2obv3xrmfoV6l5jl2ofwgPqndqaemcuppgYkzK4fotunwlznjhb1opvaiaozaYq"/>-->
            <!--<property name="usePool" value="true"/>-->
            <!--<property name="poolConfig" ref="jedisPoolConfig"/>-->
        <!--</bean>-->
        <!--<bean  id="jedisConnectionFactoryToms" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">-->
            <!--<property name="hostName" value="10.144.10.151"/>-->
            <!--<property name="port" value="6379"/>-->
            <!--<property name="database" value="11"/>-->
            <!--<property name="password" value="mfgkftoajpvH3lds8ykgcnzeWcaAuwhlo0lqzqsappsfacjfenwqiJtadydqwfjrN2obv3xrmfoV6l5jl2ofwgPqndqaemcuppgYkzK4fotunwlznjhb1opvaiaozaYq"/>-->
            <!--<property name="usePool" value="true"/>-->
            <!--<property name="poolConfig" ref="jedisPoolConfig"/>-->
        <!--</bean>-->
    <!--</beans>-->
    <!--<beans profile="staging">-->
        <!--<bean  id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">-->
            <!--<property name="hostName" value="10.144.10.151"/>-->
            <!--<property name="port" value="6379"/>-->
            <!--<property name="database" value="2"/>-->
            <!--<property name="password" value="mfgkftoajpvH3lds8ykgcnzeWcaAuwhlo0lqzqsappsfacjfenwqiJtadydqwfjrN2obv3xrmfoV6l5jl2ofwgPqndqaemcuppgYkzK4fotunwlznjhb1opvaiaozaYq"/>-->
            <!--<property name="usePool" value="true"/>-->
            <!--<property name="poolConfig" ref="jedisPoolConfig"/>-->
        <!--</bean>-->
        <!--<bean  id="jedisConnectionFactoryToms" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">-->
            <!--<property name="hostName" value="10.144.10.151"/>-->
            <!--<property name="port" value="6379"/>-->
            <!--<property name="database" value="10"/>-->
            <!--<property name="password" value="mfgkftoajpvH3lds8ykgcnzeWcaAuwhlo0lqzqsappsfacjfenwqiJtadydqwfjrN2obv3xrmfoV6l5jl2ofwgPqndqaemcuppgYkzK4fotunwlznjhb1opvaiaozaYq"/>-->
            <!--<property name="usePool" value="true"/>-->
            <!--<property name="poolConfig" ref="jedisPoolConfig"/>-->
        <!--</bean>-->
    <!--</beans>-->

</beans>